{"version":3,"sources":["redux/actionTypes.js","redux/reducers/currentConversation.js","redux/reducers/currentUser.js","redux/reducers/messages.js","redux/store.js","redux/reducers/conversations.js","redux/actionCreators.js","images/happy.svg","images/paperclip.svg","images/right-arrow.svg","socket.js","components/Forms.js","images/eli.jpg","images/salome.jpg.jpg","components/Chat.js","components/PersonInformation.js","axios.js","components/Profile.js","components/Home.js","components/Login.js","App.js","index.js"],"names":["SET_CURRENT_USER","ADD_NEW_CONVERSATION","REMOVE_CONVERSATION","SET_CONVERSATIONS","SEND_MESSAGE","RECEIVE_MESSAGE","SET_CURRENT_CONVERSATION","initialState","username","id","position","store","reducer","combineReducers","currentUser","state","action","type","payload","conversations","user","filter","conversation","messages","toUsername","content","oldMessages","newMessage","isFromSelf","fromUsername","currentConversation","createStore","setCurrentUserAction","socket","io","process","autoConnect","Forms","onNewMessage","useState","input","setInput","showEmojis","setShowEmojis","dispatch","useDispatch","emojiPickerRef","useRef","useEffect","document","addEventListener","handleOutsideClick","removeEventListener","event","target","matches","current","contains","Form","onSubmit","preventDefault","sendMessageAction","emit","setTimeout","FormInput","className","src","paperClip","alt","InputGroup","value","onChange","e","placeholder","ref","onSelect","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","onClick","happy","Button","disabled","length","rightArrow","styled","form","button","div","Chat","messageBoxRef","MessageContainer","MessageBox","map","message","index","MyRow","MyMessage","MyImage","eli","PartnerRow","PartnerImage","salome","PartnerMessage","height","scrollHeight","scrollTo","top","img","PersonInformation","useSelector","Person","PersonData","Image","Title","h3","axiosInstance","axios","create","baseURL","Profile","onConversationClick","isOpen","setIsOpen","on","addNewConversationAction","removeConversationAction","get","then","response","users","data","setConversationsAction","off","Personal","ActiveConversations","PersonList","Persons","active","Page","Box","Home","setCurrentConversationAction","Login","usernameRef","positionRef","autoComplete","auth","connect","App","fetch","res","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd537c91.chunk.js","sourcesContent":["export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const ADD_NEW_CONVERSATION = \"ADD_NEW_CONVERSATION\";\r\nexport const REMOVE_CONVERSATION = \"REMOVE_CONVERSATION\";\r\nexport const SET_CONVERSATIONS = \"SET_CONVERSATIONS\";\r\nexport const SEND_MESSAGE = \"SEND_MESSAGE\";\r\nexport const RECEIVE_MESSAGE = \"RECEIVE_MESSAGE\";\r\nexport const SET_CURRENT_CONVERSATION = \"SET_CURRENT_CONVERSATION\";","import { SET_CURRENT_CONVERSATION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  username: null,\r\n  id: null,\r\n};\r\n\r\nexport default function currentConversationReducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CONVERSATION:\r\n      const { username, id } = action.payload;\r\n      return {\r\n        username,\r\n        id,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_CURRENT_USER } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  username: null,\r\n  position: null,\r\n};\r\n\r\nexport default function currentUserReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      const { username, position } = action.payload;\r\n      return {\r\n        username,\r\n        position,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { RECEIVE_MESSAGE, SEND_MESSAGE } from \"../actionTypes\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function messagesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      const { toUsername, content } = action.payload;\r\n      const oldMessages = state[toUsername] || [];\r\n      const newMessage = {\r\n        content,\r\n        isFromSelf: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        [toUsername]: [...oldMessages, newMessage],\r\n      };\r\n    }\r\n    case RECEIVE_MESSAGE: {\r\n      const { fromUsername, content } = action.payload;\r\n      const oldMessages = state[fromUsername] || [];\r\n      const newMessage = {\r\n        content,\r\n        isFromSelf: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        [fromUsername]: [...oldMessages, newMessage],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport conversationsReducer from \"./reducers/conversations\";\r\nimport currentConversationReducer from \"./reducers/currentConversation\";\r\nimport currentUserReducer from \"./reducers/currentUser\";\r\nimport logger from \"redux-logger\";\r\nimport messagesReducer from \"./reducers/messages\";\r\n\r\nconst reducer = combineReducers({\r\n  currentUser: currentUserReducer,\r\n  conversations: conversationsReducer,\r\n  messages: messagesReducer,\r\n  currentConversation: currentConversationReducer,\r\n});\r\n\r\nlet store;\r\nif (process.env.NODE_ENV === \"development\") {\r\n  store = createStore(reducer, composeWithDevTools(applyMiddleware(logger)));\r\n} else {\r\n  store = createStore(reducer);\r\n}\r\n\r\nexport { store };\r\n","import {\r\n    ADD_NEW_CONVERSATION,\r\n    REMOVE_CONVERSATION,\r\n    SET_CONVERSATIONS,\r\n  } from \"../actionTypes\";\r\n  \r\n  export default function conversationsReducer(state = [], action) {\r\n    switch (action.type) {\r\n      case ADD_NEW_CONVERSATION:\r\n        const user = action.payload;\r\n        return [...state, user];\r\n      case SET_CONVERSATIONS:\r\n        return [...action.payload];\r\n      case REMOVE_CONVERSATION:\r\n        const id = action.payload;\r\n        return state.filter((conversation) => conversation.id !== id);\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {\r\n    ADD_NEW_CONVERSATION,\r\n    RECEIVE_MESSAGE,\r\n    REMOVE_CONVERSATION,\r\n    SEND_MESSAGE,\r\n    SET_CONVERSATIONS,\r\n    SET_CURRENT_CONVERSATION,\r\n    SET_CURRENT_USER,\r\n  } from \"./actionTypes\";\r\n  \r\n  export function setCurrentUserAction(username, position) {\r\n    return {\r\n      type: SET_CURRENT_USER,\r\n      payload: {\r\n        username,\r\n        position,\r\n      },\r\n    };\r\n  }\r\n  \r\n  export function setCurrentConversationAction(username, id) {\r\n    return {\r\n      type: SET_CURRENT_CONVERSATION,\r\n      payload: {\r\n        username,\r\n        id,\r\n      },\r\n    };\r\n  }\r\n  \r\n  export function addNewConversationAction(user) {\r\n    return {\r\n      type: ADD_NEW_CONVERSATION,\r\n      payload: user,\r\n    };\r\n  }\r\n  \r\n  export function removeConversationAction(id) {\r\n    return {\r\n      type: REMOVE_CONVERSATION,\r\n      payload: id,\r\n    };\r\n  }\r\n  \r\n  export function setConversationsAction(conversations) {\r\n    return {\r\n      type: SET_CONVERSATIONS,\r\n      payload: conversations,\r\n    };\r\n  }\r\n  \r\n  export function sendMessageAction(toUsername, content) {\r\n    return {\r\n      type: SEND_MESSAGE,\r\n      payload: {\r\n        toUsername,\r\n        content,\r\n      },\r\n    };\r\n  }\r\n  \r\n  export function receiveMessageAction(fromUsername, content) {\r\n    return {\r\n      type: RECEIVE_MESSAGE,\r\n      payload: {\r\n        fromUsername,\r\n        content,\r\n      },\r\n    };\r\n  }\r\n  ","export default __webpack_public_path__ + \"static/media/happy.8a1cb78f.svg\";","export default __webpack_public_path__ + \"static/media/paperclip.87c44b2e.svg\";","export default __webpack_public_path__ + \"static/media/right-arrow.0a7ea73f.svg\";","import { io } from \"socket.io-client\";\r\n\r\nconst SOCKET_SERVER_URL = process.env.REACT_APP_BACKEND_URL;\r\nconst socket = io(SOCKET_SERVER_URL, { autoConnect: false });\r\n\r\nexport default socket;","import \"emoji-mart/css/emoji-mart.css\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { Picker } from \"emoji-mart\";\r\nimport happy from \"../images/happy.svg\";\r\nimport paperClip from \"../images/paperclip.svg\";\r\nimport rightArrow from \"../images/right-arrow.svg\";\r\nimport { sendMessageAction } from \"../redux/actionCreators\";\r\nimport socket from \"../socket\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Forms = ({ toUsername, onNewMessage }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [showEmojis, setShowEmojis] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const emojiPickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleOutsideClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleOutsideClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleOutsideClick = (event) => {\r\n    if (event.target.matches(\"img.emoji\") || !emojiPickerRef.current) {\r\n      return;\r\n    }\r\n\r\n    if (!emojiPickerRef.current.contains(event.target)) {\r\n      setShowEmojis(false);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (showEmojis) {\r\n      setShowEmojis(false);\r\n    } else {\r\n      setShowEmojis(true);\r\n    }\r\n  };\r\n\r\n  const addEmoji = (e) => {\r\n    let sym = e.unified.split(\"-\");\r\n    let codesArray = [];\r\n    sym.forEach((el) => codesArray.push(\"0x\" + el));\r\n    let emoji = String.fromCodePoint(...codesArray);\r\n    setInput(input + emoji);\r\n  };\r\n\r\n  const handleMessageSend = (event) => {\r\n    event.preventDefault();\r\n    dispatch(sendMessageAction(toUsername.username, input));\r\n    socket.emit(\"chat message\", input, toUsername.username, toUsername.id);\r\n    setInput(\"\");\r\n    setTimeout(onNewMessage, 10);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleMessageSend}>\r\n      <FormInput>\r\n        <img className=\"paper-clip\" src={paperClip} alt=\"select-file\"></img>\r\n        <InputGroup>\r\n          <input\r\n            value={input}\r\n            className=\"enter-message\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Enter your message here...\"\r\n          />\r\n          {showEmojis && (\r\n            <div ref={emojiPickerRef} className=\"emoji-picker\">\r\n              <Picker onSelect={addEmoji} />\r\n            </div>\r\n          )}\r\n          <img\r\n            onClick={handleClick}\r\n            className=\"emoji icon\"\r\n            alt=\"emoji\"\r\n            src={happy}\r\n          ></img>\r\n        </InputGroup>\r\n        <Button disabled={input.length === 0}>\r\n          <span>Send</span>\r\n          <img alt=\"arrow\" src={rightArrow}></img>\r\n        </Button>\r\n      </FormInput>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n\r\nconst Form = styled.form`\r\n  position: absolute;\r\n  width: 90%;\r\n  padding: 5px;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n  display: flex;\r\n  background-color: white;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  flex-basis: 10%;\r\n  padding: 9px 13px;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background-color: #014dfc;\r\n  border: 1px solid #014dfc;\r\n  color: white;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    background-color: gray;\r\n    border-color: gray;\r\n  }\r\n\r\n  img {\r\n    width: 13px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  position: relative;\r\n  flex-basis: 80%;\r\n  margin-right: 10px;\r\n\r\n  input {\r\n    widht: 100%;\r\n  }\r\n\r\n  img.emoji {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 20px;\r\n  }\r\n`;\r\n\r\nconst FormInput = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 5px;\r\n\r\n  .paper-clip {\r\n    flex-basis: 5%;\r\n  }\r\n\r\n  .enter-message {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    border: 2px solid #f0f0f2;\r\n    outline: none;\r\n    position: relative;\r\n  }\r\n\r\n  .emoji {\r\n    position: absolute;\r\n    width: 25px;\r\n    right: 124px;\r\n    top: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .emoji-picker {\r\n    position: absolute;\r\n    right: 10px;\r\n    bottom: 370px;\r\n    height: 56%;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/eli.281a1482.jpg\";","export default __webpack_public_path__ + \"static/media/salome.jpg.abf98ecd.jpg\";","import Forms from \"./Forms\";\r\nimport React, { useRef } from \"react\";\r\nimport eli from \"../images/eli.jpg\";\r\nimport salome from \"../images/salome.jpg.jpg\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Chat = ({ messages = [], toUsername }) => {\r\n  const messageBoxRef = useRef();\r\n\r\n  const handleNewMessage = () => {\r\n    if (!messageBoxRef.current) {\r\n      return;\r\n    }\r\n    const height = messageBoxRef.current.scrollHeight;\r\n    messageBoxRef.current.scrollTo({\r\n      top: height,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MessageContainer>\r\n      <MessageBox ref={messageBoxRef}>\r\n        {messages.map((message, index) => {\r\n          if (message.isFromSelf) {\r\n            return (\r\n              <MyRow key={index}>\r\n                <MyMessage>{message.content}</MyMessage>\r\n                <MyImage src={eli} />\r\n              </MyRow>\r\n            );\r\n          } else {\r\n            return (\r\n              <PartnerRow key={index}>\r\n                <PartnerImage src={salome} />\r\n                <PartnerMessage>{message.content}</PartnerMessage>\r\n              </PartnerRow>\r\n            );\r\n          }\r\n        })}\r\n      </MessageBox>\r\n      <Forms onNewMessage={handleNewMessage} toUsername={toUsername} />\r\n    </MessageContainer>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\nconst MessageContainer = styled.div`\r\n  height: 80vh;\r\n  position: relative;\r\n  width: 62%;\r\n  padding-bottom: 100px;\r\n  background-color: #f2f6fc;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const MessageBox = styled.div`\r\n  position: relative;\r\n  overflow-y: scroll;\r\n  height: 100%;\r\n  width: 100%;\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MyRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst MyMessage = styled.div`\r\n  background-color: #19233b;\r\n  color: #fff;\r\n  padding: 5px 25px;\r\n  margin-right: 5px;\r\n  border-radius: 7px;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst PartnerRow = styled(MyRow)`\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst PartnerMessage = styled.div`\r\n  align-items: center;\r\n  background-color: #fff;\r\n  color: #000;\r\n  padding: 5px 25px;\r\n  display: flex;\r\n  margin-left: 5px;\r\n  border-radius: 7px;\r\n`;\r\n\r\nexport const MyImage = styled.img`\r\n  width: 44px;\r\n  height: 47px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n`;\r\nexport const PartnerImage = styled(MyImage)`\r\n  width: 49px;\r\n  height: 47px;\r\n  margin-left: 10px;\r\n`;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport eli from \"../images/eli.jpg\";\r\n\r\nconst PersonInformation = () => {\r\n  const currentUser = useSelector((state) => state.currentUser);\r\n\r\n  return (\r\n    <Person>\r\n      <PersonData>\r\n        <Image src={eli}></Image>\r\n        <Title>{currentUser.username}</Title>\r\n        <span>{currentUser.position}</span>\r\n      </PersonData>\r\n    </Person>\r\n  );\r\n};\r\n\r\nexport default PersonInformation;\r\n\r\nexport const Person = styled.div`\r\n  width: 250px;\r\n  height: 250px;\r\n  border-radius: 19px;\r\n  background-color: #f5f9fc;\r\n`;\r\nexport const Image = styled.img`\r\n  width: 86px;\r\n  height: 90px;\r\n  border-radius: 50%;\r\n`;\r\nconst Title = styled.h3`\r\n  margin: 10px 0;\r\n  color: #394f60;\r\n`;\r\n\r\nconst PersonData = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n  span {\r\n    color: #b6c1ce;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nexport default axiosInstance;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  addNewConversationAction,\r\n  removeConversationAction,\r\n  setConversationsAction,\r\n} from \"../redux/actionCreators\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { MyImage } from \"./Chat\";\r\nimport PersonInformation from \"./PersonInformation\";\r\nimport axios from \"../axios\";\r\nimport eli from \"../images/eli.jpg\";\r\nimport socket from \"../socket\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Profile = ({ onConversationClick }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const conversations = useSelector((state) => state.conversations);\r\n  const currentConversation = useSelector((state) => state.currentConversation);\r\n  const currentUser = useSelector((state) => state.currentUser);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"new user\", (user) => {\r\n      dispatch(addNewConversationAction(user));\r\n    });\r\n\r\n    socket.on(\"user disconnected\", (id) => {\r\n      dispatch(removeConversationAction(id));\r\n      // TODO: set current conversatin  null\r\n    });\r\n\r\n    axios.get(\"users\").then((response) => {\r\n      const users = response.data.filter(\r\n        (user) => user.username !== currentUser.username\r\n      );\r\n      dispatch(setConversationsAction(users));\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"new user\");\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    if (isOpen) {\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Personal>\r\n      <div className=\"quick-chat\">\r\n        <i className=\"fab fa-facebook-messenger\"></i>\r\n        <h2>QuickChat</h2>\r\n      </div>\r\n      <PersonInformation />\r\n      <ActiveConversations>\r\n        <div className=\"active-talk\">\r\n          <h3>Active Conversations</h3>\r\n          <span>{conversations.length}</span>\r\n          <i\r\n            onClick={handleClick}\r\n            className={isOpen ? \"fas fa-chevron-up\" : \"fas fa-chevron-down\"}\r\n          ></i>\r\n        </div>\r\n        <PersonList>\r\n          {conversations.map((user) => (\r\n            <Persons\r\n              onClick={() => onConversationClick(user.username, user.id)}\r\n              key={user.username}\r\n              isOpen={isOpen}\r\n              active={currentConversation.id === user.id}\r\n            >\r\n              <MyImage src={eli} />\r\n              <h3>{user.username}</h3>\r\n            </Persons>\r\n          ))}\r\n        </PersonList>\r\n      </ActiveConversations>\r\n    </Personal>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nexport const Personal = styled.div`\r\n  width: 30%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .quick-chat {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    h2 {\r\n      font-size: 21px;\r\n      margin: 5px 0 13px 0;\r\n    }\r\n\r\n    i {\r\n      font-size: 31px;\r\n      color: #7c6bc7;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\nconst ActiveConversations = styled.div`\r\n  height: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-top: 20px;\r\n  .active-talk {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    h3 {\r\n      margin: 0;\r\n    }\r\n\r\n    i {\r\n      position: absolute;\r\n      right: -53px;\r\n      cursor: pointer;\r\n    }\r\n    span {\r\n      background-color: #ebedee;\r\n      font-weight: bold;\r\n      border-radius: 50%;\r\n      padding: 5px 9px;\r\n      margin-left: 7px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PersonList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 10px;\r\n  width: 73%;\r\n`;\r\n\r\nconst Persons = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  opacity: ${({ isOpen }) => (isOpen ? \"1\" : \"0\")};\r\n  height: ${({ isOpen }) => (isOpen ? \"auto\" : \"0\")};\r\n  margin: ${({ isOpen }) => (isOpen ? \"10px 0\" : \"0\")};\r\n  transform: ${({ isOpen }) =>\r\n    isOpen ? \"translateY(0)\" : \"translateY(-50px)\"};\r\n  transition: all 0.3s linear;\r\n  padding: 0 8px;\r\n  background-color: ${({ active }) => (active ? \"#f2f6fc\" : \"#FFFFFF\")};\r\n  h3 {\r\n    margin: 0 0 0 10px;\r\n    color: #394f60;\r\n  }\r\n  &:hover {\r\n    background-color: #f2f6fc;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  receiveMessageAction,\r\n  setCurrentConversationAction,\r\n} from \"../redux/actionCreators\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Chat from \"./Chat\";\r\nimport Profile from \"./Profile\";\r\nimport socket from \"../socket\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Home() {\r\n  const currentConversation = useSelector((state) => state.currentConversation);\r\n  const messages = useSelector(\r\n    (state) => state.messages[currentConversation.username]\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive message\", (message, username) => {\r\n      dispatch(receiveMessageAction(username, message));\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"send message\");\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleConversationClick = (username, id) => {\r\n    dispatch(setCurrentConversationAction(username, id));\r\n  };\r\n\r\n  return (\r\n    <Page data-testid=\"home-component\">\r\n      <Box>\r\n        <Profile onConversationClick={handleConversationClick} />\r\n        {currentConversation.id !== null ? (\r\n          <Chat toUsername={currentConversation} messages={messages} />\r\n        ) : (\r\n          <span>Select a conversation to start chatting</span>\r\n        )}\r\n      </Box>\r\n    </Page>\r\n  );\r\n}\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: white;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  height: 90%;\r\n  width: 90%;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  display: flex;\r\n`;\r\n\r\nexport default Home;\r\n","import \"./../styles/Join.css\";\r\n\r\nimport { setCurrentUserAction } from \"../redux/actionCreators\";\r\nimport socket from \"../socket\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const usernameRef = useRef();\r\n  const positionRef = useRef();\r\n\r\n  function handleUsernameSubmit(event) {\r\n    event.preventDefault();\r\n    dispatch(\r\n      setCurrentUserAction(usernameRef.current.value, positionRef.current.value)\r\n    );\r\n    socket.auth = {\r\n      username: usernameRef.current.value,\r\n      position: positionRef.current.value,\r\n    };\r\n    socket.connect();\r\n  }\r\n\r\n  return (\r\n    <form\r\n      data-testid=\"login-component\"\r\n      className=\"login\"\r\n      autoComplete=\"off\"\r\n      onSubmit={handleUsernameSubmit}\r\n    >\r\n      <div className=\"form\">\r\n        <h1>Login</h1>\r\n        <div className=\"username\">\r\n          <input\r\n            id=\"username\"\r\n            placeholder=\"Enter your username\"\r\n            ref={usernameRef}\r\n          />\r\n        </div>\r\n        <div className=\"username position\">\r\n          <input\r\n            id=\"position\"\r\n            placeholder=\"Enter your position/role\"\r\n            ref={positionRef}\r\n          />\r\n        </div>\r\n        <button>Join chat</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import \"./styles/App.css\";\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport { setCurrentUserAction } from \"./redux/actionCreators\";\n\nfunction App() {\n  const currentUser = useSelector((state) => state.currentUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetch(\"http://google.com\").then((res) => res);\n    return () => {\n      dispatch(setCurrentUserAction(null, null));\n    };\n    // eslint-disable-next-line\n  }, []);\n  return currentUser.username ? <Home /> : <Login />;\n}\n\nexport default App;\n","import { store } from \"./redux/store\";\n\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}